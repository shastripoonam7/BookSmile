
import java.awt.Image;
import java.io.File;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import java.awt.event.KeyEvent;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Locale;
import javax.swing.DefaultComboBoxModel;
//import org.
/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * frm_cust.java
 *
 * Created on Jan 21, 2016, 12:09:32 AM
 */

/**
 *
 * @author my
 */
public class frm_cust extends javax.swing.JFrame {
    functionss s=new functionss();
    DefaultTableModel model;
    String imgf="blank";
    File f;


    /** Creates new form frm_cust */
    public frm_cust() {
        initComponents();
         this.pack();
         this.setLocationRelativeTo(null);

        this.setTitle("Tenant Details...");
        jDateChooser1.setDate(new Date());
        try {
            jLabel10.setVisible(false);
            model=(DefaultTableModel)jTable1.getModel();
            model.setRowCount(0);
            String qry="select * from customer";

            s.Run(qry, "Read");
            while(s.rs.next())
            {
                String[] s1={String.valueOf(s.rs.getInt(1)),s.rs.getString(2),s.rs.getString(3),s.rs.getString(4),s.rs.getString(5),s.rs.getString(6),String.valueOf(s.rs.getInt(7)),String.valueOf(s.rs.getInt(8)),s.rs.getString(9),String.valueOf(s.rs.getDate(10))};
                model.addRow(s1);
            }
             cmbpno.removeAllItems();
            // String ssq="Yes";
            qry="select * from property";
            s.Run(qry,"Read");
            while(s.rs.next())
            {
               // if((s.rs.getString(5)).equalsIgnoreCase("Yes"))
                //{
                    cmbpno.addItem(String.valueOf(s.rs.getInt(1)));
                //}
            }

            

        } catch (Exception e) {
        JOptionPane.showMessageDialog(null,e);
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        id = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        phno = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        emailid = new javax.swing.JTextField();
        img = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        address = new javax.swing.JTextArea();
        jSeparator2 = new javax.swing.JSeparator();
        insertbtn = new javax.swing.JButton();
        updatebtn = new javax.swing.JButton();
        viewbtn = new javax.swing.JButton();
        cmbproof = new javax.swing.JComboBox();
        Delete = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        cmbrno = new javax.swing.JComboBox();
        jLabel9 = new javax.swing.JLabel();
        cmbpno = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        btnclear = new java.awt.Button();
        jFileChooser2 = new javax.swing.JFileChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Phno", "Emailid", "Address", "Image", "Pno", "Rno", "Proof", "doj"
            }
        ));
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);

        jPanel2.setBackground(new java.awt.Color(204, 204, 204));

        jLabel1.setFont(new java.awt.Font("Rockwell", 1, 24));
        jLabel1.setText("Enter Tenant details...");

        jSeparator1.setBackground(new java.awt.Color(0, 153, 153));

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel2.setForeground(new java.awt.Color(0, 102, 102));
        jLabel2.setText("ID");

        id.setEditable(false);
        id.setText("default");
        id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                idActionPerformed(evt);
            }
        });
        id.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                idKeyTyped(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel3.setForeground(new java.awt.Color(0, 102, 102));
        jLabel3.setText("Name");

        name.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                nameKeyTyped(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText("Phno");

        phno.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                phnoKeyTyped(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Email id");

        emailid.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                emailidFocusLost(evt);
            }
        });
        emailid.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                emailidKeyTyped(evt);
            }
        });

        img.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 11));
        jButton1.setText("Upload image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Address");

        address.setColumns(20);
        address.setRows(5);
        address.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addressKeyTyped(evt);
            }
        });
        jScrollPane2.setViewportView(address);

        jSeparator2.setBackground(new java.awt.Color(0, 153, 153));

        insertbtn.setFont(new java.awt.Font("Tahoma", 1, 11));
        insertbtn.setText("Insert");
        insertbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertbtnActionPerformed(evt);
            }
        });

        updatebtn.setFont(new java.awt.Font("Tahoma", 1, 11));
        updatebtn.setText("Update");
        updatebtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updatebtnActionPerformed(evt);
            }
        });

        viewbtn.setFont(new java.awt.Font("Tahoma", 1, 11));
        viewbtn.setText("View");
        viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewbtnActionPerformed(evt);
            }
        });

        cmbproof.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "select", "Adhar card", "Voting card", "Pan card", "Driving licence", " " }));

        Delete.setFont(new java.awt.Font("Tahoma", 1, 11));
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel6.setForeground(new java.awt.Color(0, 102, 102));
        jLabel6.setText("Plot no");

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Room no");

        cmbrno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "0" }));
        cmbrno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbrnoActionPerformed(evt);
            }
        });

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText("Proof");

        cmbpno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        cmbpno.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cmbpnoMousePressed(evt);
            }
        });
        cmbpno.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbpnoItemStateChanged(evt);
            }
        });
        cmbpno.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbpnoActionPerformed(evt);
            }
        });
        cmbpno.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cmbpnoFocusLost(evt);
            }
        });

        jLabel10.setText("jLabel10");

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 14));
        jLabel11.setForeground(new java.awt.Color(0, 102, 102));
        jLabel11.setText("Date of joining");

        btnclear.setFont(new java.awt.Font("Dialog", 1, 12)); // NOI18N
        btnclear.setLabel("clear");
        btnclear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnclearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE))
                        .addGap(41, 41, 41))))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(44, 44, 44)
                .addComponent(insertbtn)
                .addGap(45, 45, 45)
                .addComponent(updatebtn)
                .addGap(31, 31, 31)
                .addComponent(viewbtn)
                .addGap(43, 43, 43)
                .addComponent(Delete)
                .addContainerGap(146, Short.MAX_VALUE))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jSeparator2, javax.swing.GroupLayout.DEFAULT_SIZE, 557, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addGap(18, 18, 18)
                        .addComponent(cmbproof, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(emailid)
                                .addComponent(phno)
                                .addComponent(name)
                                .addComponent(id, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(img, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbpno, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cmbrno, 0, 121, Short.MAX_VALUE)
                            .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 109, Short.MAX_VALUE)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(139, 139, 139))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(204, 204, 204)
                .addComponent(jLabel10)
                .addContainerGap(333, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel1)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(32, 32, 32)
                                .addComponent(jLabel10)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jLabel11))
                                    .addComponent(jLabel2))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(phno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(emailid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(57, 57, 57)
                                .addComponent(jDateChooser1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(img, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(32, 32, 32)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(cmbpno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel6)))
                            .addComponent(jLabel7)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(cmbproof, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel8)
                            .addComponent(cmbrno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnclear, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(19, 19, 19)))
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(11, 11, 11)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(insertbtn)
                    .addComponent(updatebtn)
                    .addComponent(viewbtn)
                    .addComponent(Delete))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 603, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jFileChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, 0, 0, Short.MAX_VALUE)
                    .addComponent(jFileChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_idActionPerformed
        // TODO add your handling code here:
}//GEN-LAST:event_idActionPerformed

    private void insertbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertbtnActionPerformed
        try {
          //  jDateChooser1.setDateFormatString("yyyy/MM/dd");
            SimpleDateFormat sdf = new SimpleDateFormat("yyy-MM-dd");
            String date = sdf.format(jDateChooser1.getDate());




             if(id.getText().length()==0||name.getText().length()==0||emailid.getText().length()==0||address.getText().length()==0||phno.getText().length()==0)
            {
              JOptionPane.showMessageDialog(null,"please fill up all the details!");
                return;
            }
              if(id.getText().equals("default"))
                  {
                  }
          else
          {
                 s.Run("select * from customer where id="+id.getText()+"", "Read");
            if(s.rs.next())
            {
                JOptionPane.showMessageDialog(null,"This customer id details already exist!");
                return;

            }
          }

            if(date=="")
            {
              JOptionPane.showMessageDialog(null,"please select date of ");
                return;
            }
            if(jLabel10.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"Please upload customer image!");
                return;
            }

            if(cmbproof.getSelectedItem()=="select")
            {
                JOptionPane.showMessageDialog(null,"Customer should have atleast one proof!");
                return;
            }
            
             s.Run("select * from property where id="+cmbpno.getSelectedItem()+" and type='Building' ","Read");
              if(s.rs.next())
             {
                    if(Integer.parseInt(cmbrno.getSelectedItem().toString())<1)
                    {
                       JOptionPane.showMessageDialog(null,"Please select any room");
                return;
                    }
                }

            s.Run("Select * from property where id="+cmbpno.getSelectedItem()+" and Available='No'", "Read");
            if(s.rs.next())
            {
                JOptionPane.showMessageDialog(null,"This property not available");
                return;
            }
             s.Run("Select * from rooms where RoomNo="+cmbrno.getSelectedItem()+" and Bno="+cmbpno.getSelectedItem()+" and available='No'", "Read");
            if(s.rs.next())
            {
                JOptionPane.showMessageDialog(null,"This room not available");
                return;
            }
              
               

           s.Run("select * from property where id="+cmbpno.getSelectedItem()+" and type='Building'", "Read");
           if(s.rs.next())
           {
               
            String qry="insert into customer values(default,'"+name.getText()+"',"+phno.getText()+",'"+emailid.getText()+"','"+address.getText()+"','"+jLabel10.getText()+"','"+cmbpno.getSelectedItem()+"','"+cmbrno.getSelectedItem()+"','"+cmbproof.getSelectedItem()+"','"+date+"')";
            s.Run(qry, "Write");
            JOptionPane.showMessageDialog(null, "Inserted successfully!");
                        
           }
           else
           {
            String qry="insert into customer values(default,'"+name.getText()+"',"+phno.getText()+",'"+emailid.getText()+"','"+address.getText()+"','"+jLabel10.getText()+"','"+cmbpno.getSelectedItem()+"',0,'"+cmbproof.getSelectedItem()+"','"+date+"')";
            s.Run(qry, "Write");
            JOptionPane.showMessageDialog(null, "Inserted successfully!");
           }
           
            s.Run("Select * from property where id="+cmbpno.getSelectedItem()+"", "Read");
            if(s.rs.next())
            {
                if(!s.rs.getString(2).equalsIgnoreCase("Building"));
                s.Run("Update property  set Available='No'where id="+cmbpno.getSelectedItem()+" ", "Write");
            }

            s.Run("Update rooms set Available='No' where RoomNo='"+cmbrno.getSelectedItem()+"' and Bno="+cmbpno.getSelectedItem()+"", "Write");
            s.Run("Select * from rooms where Bno='"+cmbpno.getSelectedItem()+"' and Available='Yes'","Read");
            if(s.rs.next())
            {
                s.Run("Update property set Available='Yes' where id='"+cmbpno.getSelectedItem()+"'","Write");

            }
            else
            {
               s.Run("Update property set Available='No' where id='"+cmbpno.getSelectedItem()+"'","Write");
            }
             model.setRowCount(0);
             String qry="select * from customer";
            s.Run(qry, "Read");
            while(s.rs.next())
            {
                String[] s1={String.valueOf(s.rs.getInt(1)),s.rs.getString(2),s.rs.getString(3),s.rs.getString(4),s.rs.getString(5),s.rs.getString(6),String.valueOf(s.rs.getInt(7)),String.valueOf(s.rs.getInt(8)),s.rs.getString(9),String.valueOf(s.rs.getDate(10))};
                model.addRow(s1);
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, e);
        }
        // TODO add your handling code here:
}//GEN-LAST:event_insertbtnActionPerformed

    private void updatebtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updatebtnActionPerformed
   try {
       SimpleDateFormat sdf = new SimpleDateFormat("yyyy/MM/dd");
            String date = sdf.format(jDateChooser1.getDate());

       String qry;
       
       if(id.getText().length()==0||name.getText().length()==0||emailid.getText().length()==0||address.getText().length()==0||phno.getText().length()==0||date.length()==0)
            {
              JOptionPane.showMessageDialog(null,"please fill up all the details!");
                return;
            }

            if(cmbproof.getSelectedItem()=="select")
            {
                JOptionPane.showMessageDialog(null,"Customer should have atleast one proof!");
                return;
            }
          if(jLabel10.getText().length()==0)
            {
                JOptionPane.showMessageDialog(null,"Please upload customer image!");
                return;
            }

        s.Run("select * from property where id="+cmbpno.getSelectedItem()+" and type='+Building+' ","Read");
        if(s.rs.next())
        {
                    if(Integer.parseInt(cmbrno.getSelectedItem().toString())<1)
                    {
                       JOptionPane.showMessageDialog(null,"Please select any room");
                return;
                    }
                }

       qry="Select * from customer where id="+id.getText()+"";
       s.Run(qry,"Read");
       int br=0,rr=0;
       if(s.rs.next())
       {
           br=s.rs.getInt(7);
            rr=s.rs.getInt(8);
       }


s.Run("Update property set available='Yes' where id="+br+"", "Write");
if(rr!=0)
{   
 s.Run("Update rooms set Available='Yes' where bno="+br+" and RoomNo="+rr+"", "Write");
}
 s.Run("Select * from property where id="+cmbpno.getSelectedItem()+" and Available='No'", "Read");
            if(s.rs.next())
            {
                JOptionPane.showMessageDialog(null,"This property not available");
                return;
            }
             s.Run("Select * from rooms where RoomNo="+cmbrno.getSelectedItem()+" and Bno="+cmbpno.getSelectedItem()+" and available='No'", "Read");
            if(s.rs.next())
            {
                JOptionPane.showMessageDialog(null,"This room not available");
                return;
            }


          s.Run("select * from property where id="+Integer.parseInt(cmbpno.getSelectedItem().toString())+" and type='Building'", "Read");
           if(s.rs.next())
           {
            qry="update customer set name='"+name.getText()+"',phno='"+phno.getText()+"',emailid='"+emailid.getText()+"',address='"+address.getText()+"',image='"+jLabel10.getText()
                    +"',bno="+Integer.parseInt(cmbpno.getSelectedItem().toString())+",rno="+Integer.parseInt(cmbrno.getSelectedItem().toString())+",proof='"+cmbproof.getSelectedItem()+"',doj='"+date+"' where id= '"+id.getText()+"'";
            s.Run(qry, "Write");
            JOptionPane.showMessageDialog(null, "Updated successfully!");
           }
           else
           {
             qry="update customer set name='"+name.getText()+"',phno='"+phno.getText()+"',emailid='"+emailid.getText()+"',address='"+address.getText()+"',image='"+jLabel10.getText()
                    +"',bno="+Integer.parseInt(cmbpno.getSelectedItem().toString())+",rno=0,proof='"+cmbproof.getSelectedItem()+"',doj='"+date+"' where id= '"+id.getText()+"'";
            s.Run(qry, "Write");
            JOptionPane.showMessageDialog(null, "Updated successfully!");
           }

         

           s.Run("Select * from property where id="+Integer.parseInt(cmbpno.getSelectedItem().toString())+"", "Read");
            if(s.rs.next())
            {
                if(!s.rs.getString(2).equalsIgnoreCase("Building"));
                s.Run("Update property  set Available='No'where id="+cmbpno.getSelectedItem()+" ", "Write");
            }
 
            s.Run("Update rooms set Available='No' where RoomNo="+Integer.parseInt(cmbrno.getSelectedItem().toString())+" and Bno="+Integer.parseInt(cmbpno.getSelectedItem().toString())+"", "Write");
            s.Run("Select * from rooms where Bno="+Integer.parseInt(cmbpno.getSelectedItem().toString())+" and Available='Yes'","Read");
            if(s.rs.next())
            {
                s.Run("Update property set Available='Yes' where id="+Integer.parseInt(cmbpno.getSelectedItem().toString())+"","Write");

            }
            
            else
            {
              s.Run("Update property set Available='No' where id="+Integer.parseInt(cmbpno.getSelectedItem().toString())+"","Write");
            
            }
             model.setRowCount(0);
             qry="select * from customer";
            s.Run(qry, "Read");
            while(s.rs.next())
            {
                String[] s1={String.valueOf(s.rs.getInt(1)),s.rs.getString(2),s.rs.getString(3),s.rs.getString(4),s.rs.getString(5),s.rs.getString(6),String.valueOf(s.rs.getInt(7)),String.valueOf(s.rs.getInt(8)),s.rs.getString(9),String.valueOf(s.rs.getDate(10))};
               model.addRow(s1);
            }

           
        } catch (Exception e) {
          JOptionPane.showMessageDialog(null, e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_updatebtnActionPerformed

    private void viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewbtnActionPerformed
        try {
            int st=Integer.parseInt(JOptionPane.showInputDialog("enter customer id"));
            String qry="select * from customer where id="+id.getText()+"";
            s.Run(qry, "Read");
            if(s.rs.next())
            {
              id.setText(String.valueOf(s.rs.getInt(1)));
              name.setText(s.rs.getString(2));
               phno.setText(s.rs.getString(3));
              emailid.setText(s.rs.getString(4));
              address.setText(s.rs.getString(5));
               jLabel10.setText(s.rs.getString(6));
       img.setIcon(new ImageIcon(new ImageIcon(s.rs.getString(6)).getImage().getScaledInstance(120, 90, Image.SCALE_DEFAULT)));
        cmbpno.setSelectedItem(String.valueOf(s.rs.getInt(7)));
        cmbrno.setSelectedItem(String.valueOf(s.rs.getInt(8)));
        cmbproof.setSelectedItem(s.rs.getString(9));
        jDateChooser1.setDate(s.rs.getDate(10));
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Record not found!");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_viewbtnActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
int row=jTable1.getSelectedRow();

String table_click=jTable1.getModel().getValueAt(row, 0).toString();
//String sql="select * from jTable1 where id='"+table_click+"'";
        try {
          // s.con=NewClass.NewClass();
           String qry="select * from customer where id =" + table_click + "";
           s.Run(qry,"Read");

            //st.executeQuery("select * from location where id='" + table_click + "'");
            if(s.rs.next())
            {
              id.setText(String.valueOf(s.rs.getInt(1)));
              name.setText(s.rs.getString(2));
              phno.setText(s.rs.getString(3));
              emailid.setText(s.rs.getString(4));
              address.setText(s.rs.getString(5));
               //f=new File(s.rs.getString(6));
              jLabel10.setText(s.rs.getString(6));
            img.setIcon(new ImageIcon(new ImageIcon(s.rs.getString(6)).getImage().getScaledInstance(120, 90, Image.SCALE_DEFAULT)));
            cmbpno.setSelectedItem(String.valueOf(s.rs.getInt("bno")));
            cmbrno.addItem(String.valueOf(s.rs.getInt("rno")));
            cmbproof.setSelectedItem(s.rs.getString(9));
            jDateChooser1.setDate(s.rs.getDate(10));
            }
           s.pst.close();
           s.rs.close();

            // TODO add your handling code here:
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null,ex);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
 try{
        jFileChooser1.showOpenDialog(null);
         f = jFileChooser1.getSelectedFile();
        //jLabel10.setText(f.getAbsolutePath());
        Image bi = ImageIO.read(f);
        img.setText("");
       // img.setIcon(new ImageIcon(bi.getScaledInstance(int width, int width, int width)));
        img.setIcon(new ImageIcon(new ImageIcon(bi).getImage().getScaledInstance(120, 90, Image.SCALE_DEFAULT)));
         String s = f.getAbsolutePath();

        jLabel10.setText(s.replace("\\", "/"));
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(null,e);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbpnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbpnoActionPerformed
  
        // JOptionPane.showMessageDialog(rootPane, "hello");  // TODO add your handling code here:   // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_cmbpnoActionPerformed

    private void cmbpnoMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbpnoMousePressed

    }//GEN-LAST:event_cmbpnoMousePressed

    private void cmbpnoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cmbpnoFocusLost
        try {
            String ssq="Yes";
            cmbrno.removeAllItems();
             String qry="select * from rooms where Bno='"+cmbpno.getSelectedItem()+"' ";
            s.Run(qry, "Read");
            if(s.rs.first())
            {
                String qry1="select * from rooms where Bno='"+cmbpno.getSelectedItem()+"' ";
            s.Run(qry1, "Read");
             
                while(s.rs.next())
                {
                    cmbrno.addItem(String.valueOf(s.rs.getInt(1)));
                 }
            }
            else
            {
                 cmbrno.addItem("0");
            }
//cmbrno.setSelectedIndex(0);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
        // TODO add your handling code here:   // TODO add your handling code here:        // TODO add your handling code here:        // TODO add your handling code here:
    }//GEN-LAST:event_cmbpnoFocusLost

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        try {
            int p=0,r=0;
            int i=Integer.valueOf(JOptionPane.showInputDialog("enter customer id?"));
             s.Run("select * from customer where id='"+i+"'", "Read");
            if(s.rs.next())
            {
              p=s.rs.getInt(7);
              r=s.rs.getInt(8);
            }
            else
            {
              JOptionPane.showMessageDialog(null, "This customer id not present!");
                return;   
            }

             s.Run("Delete from customer where id='"+i+"'", "Write");
             JOptionPane.showMessageDialog(null, "This visitor id got delelted!");
             s.Run("Update property set available='Yes' where id="+p+"", "Write");
             s.Run("Update rooms set Available='Yes' where bno="+p+" and RoomNo="+r+"", "Write");
             

               model.setRowCount(0);
            String qry="select * from customer";
            s.Run(qry, "Read");
            while(s.rs.next())
            {
                String[] s1={String.valueOf(s.rs.getInt(1)),s.rs.getString(2),s.rs.getString(3),s.rs.getString(4),s.rs.getString(5),s.rs.getString(6),String.valueOf(s.rs.getInt(7)),String.valueOf(s.rs.getInt(8)),s.rs.getString(9),String.valueOf(s.rs.getDate(10))};
                model.addRow(s1);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e);
        }
        // TODO add your handling code here:
}//GEN-LAST:event_DeleteActionPerformed

    private void idKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_idKeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c)||c==KeyEvent.VK_BACK_SPACE||c==KeyEvent.VK_DELETE))
{
   getToolkit().beep();
   evt.consume();
}

        if(id.getText().length()>10 )
{
    getToolkit().beep();
    evt.consume();
}

        // TODO add your handling code here:
    }//GEN-LAST:event_idKeyTyped

    private void nameKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nameKeyTyped
char c=evt.getKeyChar();
if(!(Character.isLetter(c)||c==KeyEvent.VK_BACK_SPACE||c==KeyEvent.VK_DELETE))
{
   getToolkit().beep();
   evt.consume();
}
    if(name.getText().length()>20 )
{
    getToolkit().beep();
    evt.consume();
}
        // TODO add your handling code here:
    }//GEN-LAST:event_nameKeyTyped

    private void addressKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addressKeyTyped

        if(address.getText().length()>40 )
{
    getToolkit().beep();
    evt.consume();
}             // TODO add your handling code here:
    }//GEN-LAST:event_addressKeyTyped

    private void emailidKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_emailidKeyTyped
  if(emailid.getText().length()>30 )
{
    getToolkit().beep();
    evt.consume();
}
        // TODO add your handling code here:
    }//GEN-LAST:event_emailidKeyTyped

    private void phnoKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_phnoKeyTyped
char c=evt.getKeyChar();
if(!(Character.isDigit(c)||c==KeyEvent.VK_BACK_SPACE||c==KeyEvent.VK_DELETE))
{
   getToolkit().beep();
   evt.consume();
}
    if(phno.getText().length()==10 )
{
    getToolkit().beep();
    evt.consume();
}        // TODO add your handling code here:
    }//GEN-LAST:event_phnoKeyTyped

    private void emailidFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_emailidFocusLost
if(!emailid.getText().matches("^[_A-Za-z0-9-\\+]+(\\.[A-Za-z0-9-]+)*@[A-Za-z0-9-]+(\\.[A-Za-z0-9]+)*(\\.[A-Za-z]{2,})$"))
{
   JOptionPane.showMessageDialog(null,"Wrong email id pattern!");
}
        // TODO add your handling code here:
    }//GEN-LAST:event_emailidFocusLost

    private void cmbrnoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbrnoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbrnoActionPerformed

    private void cmbpnoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbpnoItemStateChanged
 
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbpnoItemStateChanged

    private void btnclearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnclearActionPerformed
id.setText("default");
name.setText("");
phno.setText("");
emailid.setText("");
address.setText("");
cmbproof.setSelectedItem("select");
jDateChooser1.setDate(new Date());
img.setIcon(null);
jLabel10.setText("");

        // TODO add your handling code here:
}//GEN-LAST:event_btnclearActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new frm_cust().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Delete;
    private javax.swing.JTextArea address;
    private java.awt.Button btnclear;
    private javax.swing.JComboBox cmbpno;
    private javax.swing.JComboBox cmbproof;
    private javax.swing.JComboBox cmbrno;
    private javax.swing.JTextField emailid;
    private javax.swing.JTextField id;
    private javax.swing.JLabel img;
    private javax.swing.JButton insertbtn;
    private javax.swing.JButton jButton1;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JFileChooser jFileChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField name;
    private javax.swing.JTextField phno;
    private javax.swing.JButton updatebtn;
    private javax.swing.JButton viewbtn;
    // End of variables declaration//GEN-END:variables

}
